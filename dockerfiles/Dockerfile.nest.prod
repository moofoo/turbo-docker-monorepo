# syntax=docker/dockerfile:1.5.2

FROM node:20.2-alpine3.17 as base

RUN apk add -f --update --no-cache --virtual .gyp nano bash python3 make g++ \
      && yarn global add turbo @nestjs/cli \
      && apk del .gyp

#############################################
FROM base AS pruned
WORKDIR /app
ARG APP

COPY . .

RUN turbo prune --scope=$APP --docker

#############################################
FROM base AS installer
WORKDIR /app
ARG APP

ENV NODE_ENV=production

COPY --from=pruned /app/out/json/ .
COPY --from=pruned /app/out/yarn.lock /app/yarn.lock

RUN \
      --mount=type=cache,target=/usr/local/share/.cache/yarn/v6,sharing=locked \
      yarn --prefer-offline --frozen-lockfile --prod

COPY --from=pruned /app/out/full/ .
COPY turbo.json turbo.json

RUN yarn workspace ${APP} add -D @types/node

RUN turbo run build --no-cache --filter=${APP}...

RUN \
      --mount=type=cache,target=/usr/local/share/.cache/yarn/v6,sharing=locked \
      yarn --force --prefer-offline --frozen-lockfile --prod

#############################################
FROM base AS runner
WORKDIR /app
ARG APP
ARG START_COMMAND=start

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nestjs
USER nestjs

COPY --from=installer --chown=nestjs:nodejs /app .

RUN yarn cache clean

CMD yarn workspace ${APP} ${START_COMMAND}